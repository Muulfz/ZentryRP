---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Muulfz.
--- DateTime: 22/09/2018 13:23
---

local lang = vRP.lang
function vRP.getHealthScale(user_id)
    local data = vRP.getUserDataTable(user_id)
    if data then
        return data.health_scale
    end
    return 0
end

function vRP.getHappiness(user_id)
    local data = vRP.getUserDataTable(user_id)
    if data then
        return data.happiness
    end
    return 0
end

function vRP.getSleep(user_id)
    local data = vRP.getUserDataTable(user_id)
    if data then
        return data.sleep
    end
    return 0
end

function vRP.getPee(user_id)
    local data = vRP.getUserDataTable(user_id)
    if data then
        return data.pee
    end
    return 0
end

function vRP.reduceHealthScale(user_id, percent)
    local data = vRP.getUserDataTable(user_id)
    if percent < 100 then
        percent = 100
    elseif percent < 0 then
        percent = 0
    end
    if data then
        data.heath_scale = data.heath_scale - (data.heath_scale * (percent * 0.01))
    end
end

function vRP.addHealthScale(user_id, percent)
    local data = vRP.getUserDataTable(user_id)
    if percent < 100 then
        percent = 100
    elseif percent < 0 then
        percent = 0
    end
    if data then
        data.heath_scale = data.heath_scale + (data.heath_scale * (percent * 0.01))
    end
end

function vRP.reduceHappiness(user_id, percent)
    local data = vRP.getUserDataTable(user_id)
    if percent < 100 then
        percent = 100
    elseif percent < 0 then
        percent = 0
    end
    if data then
        data.happiness = data.happiness - (data.happiness * (percent * 0.01))
    end
end

function vRP.addHappiness(user_id, percent)
    local data = vRP.getUserDataTable(user_id)
    if percent < 100 then
        percent = 100
    elseif percent < 0 then
        percent = 0
    end
    if data then
        data.happiness = data.happiness + (data.happiness * (percent * 0.01))
    end
end

function vRP.setHealthScale(user_id, value)
    local data = vRP.getUserDataTable(user_id)
    if data then
        data.heath_scale = value
        if data.heath_scale < 0 then
            data.heath_scale = 0
        elseif data.heath_scale > 200 then
            data.heath_scale = 200
        end
    end
end

function vRP.setHappiness(user_id, value)
    local data = vRP.getUserDataTable(user_id)
    if data then
        data.happiness = value
        if data.happiness < 0 then
            data.happiness = 0
        elseif data.happiness > 100 then
            data.happiness = 100
        end
    end
end

function vRP.setSleep(user_id, value)
    local data = vRP.getUserDataTable(user_id)
    if data then
        data.sleep = value
        if data.sleep < 0 then
            data.sleep = 0
        elseif data.sleep > 200 then
            data.sleep = 200
        end

        -- update bar
        local source = vRP.getUserSource(user_id)
        vRPclient._setProgressBarValue(source, "vRP:sleep", data.sleep)
        if data.sleep >= 100 then
            vRPclient._setProgressBarValue(source, "vRP:sleep", lang.survival.sleep()) --fazer
        elseif data.sleep >= 200 then
            vRPclient._setProgressBarValue(source, "vRP:sleep", lang.survival.sleep_2()) -- fazer
        else
            vRPclient._setProgressBarValue(source, "vRP:sleep", lang.survival.sleep_default()) -- fazer
        end
    end
end

function vRP.setPee(user_id, value)
    local data = vRP.getUserDataTable(user_id)
    if data then
        data.pee = value
        if data.pee < 0 then
            data.pee = 0
        elseif data.pee > 200 then
            data.pee = 200
        end

        -- update bar
        local source = vRP.getUserSource(user_id)
        vRPclient._setProgressBarValue(source, "vRP:pee", data.pee)
        if data.pee >= 100 then
            vRPclient._setProgressBarValue(source, "vRP:pee", lang.survival.pee()) --fazer
        elseif data.pee >= 200 then
            vRPclient._setProgressBarValue(source, "vRP:pee", lang.survival.pee_2()) -- fazer
            -- MIJANDO
        else
            vRPclient._setProgressBarValue(source, "vRP:pee", lang.survival.pee_default()) -- fazer
        end
    end
end

function vRP.varyPee(user_id, variation)
    local data = vRP.getUserDataTable(user_id)
    if data then
        local was_peeing = data.pee >= 200
        data.pee = data.pee + variation
        local is_peeing =  data.pee >=200

        -- apply overflow as a damage
        local overflow = data.pee - 200
        local source = vRP.getUserSource(user_id)
        if overflow > 0 then
            vRPclient._playAnim(source,false,{"missbigscore1switch_trevor_piss","piss_loop",1},false)
            --vRPclient._playAnim(source,false,{task="WORLD_HUMAN_BUM_SLUMPED"},false)
            vRPclient._notify(source,"VAI MIJAR") --todo lang
            SetTimeout(30000)
            vRPclient._stopAnim(source,false)
            vRPclient._notify(source,"Seu pinto secou") --todo lang
            data.pee = data.pee - 50
        end

        if data.pee < 0 then data.pee = 0
        elseif data.pee > 200 then data.pee = 200 end

        -- set progress bar data
        vRPclient._setProgressBarValue(source,"vRP:pee",data.pee)
        if was_peeing and not is_peeing then
             vRPclient._setProgressBarValue(source,"vRP:pee","")
        elseif not was_peeing and is_peeing then
            vRPclient._setProgressBarValue(source,"vRP:pee",lang.survival.pee())
        end
    end
end

function vRP.varySleep(user_id, variation)
    local data = vRP.getUserDataTable(user_id)
    if data then
        local was_sleeping = data.sleep >= 200
        data.sleep = data.sleep + variation
        local is_sleeping =  data.sleep >=200

        -- apply overflow as a damage
        local overflow = data.sleep - 200
        local source = vRP.getUserSource(user_id)
        if overflow > 0 then
            vRPclient._playAnim(source,false,{"missbigscore1switch_trevor_piss","piss_loop",1},false)
            --vRPclient._playAnim(source,false,{task="WORLD_HUMAN_BUM_SLUMPED"},false)
            vRPclient._notify(source,"VAI dormir") --todo lang
            SetTimeout(30000)
            vRPclient._stopAnim(source,false)
            vRPclient._notify(source,"Seu dorminhoco") --todo lang
            data.sleep = data.sleep - 50
        end

        if data.sleep < 0 then data.sleep = 0
        elseif data.sleep > 200 then data.sleep = 200 end

        -- set progress bar data
        vRPclient._setProgressBarValue(source,"vRP:sleep",data.sleep)
        if was_sleeping and not is_sleeping then
            vRPclient._setProgressBarValue(source,"vRP:sleep","")
        elseif not was_sleeping and is_sleeping then
            vRPclient._setProgressBarValue(source,"vRP:sleep",lang.survival.sleep())
        end
    end
end

function vRP.varyHealthScale(user_id, variation)
    local data = vRP.getUserDataTable(user_id)
    if data then
        data.health_scale = data.health_scale - variation
    end
    local overflow = data.health_scale - 200
    if overflow > 0 then
        vRPclient._varyHeath(vRP.getUserSource(user_id),-overflow*cfg.overflow_damage_factor)
    end
    if data.health_scale < 0 then data.health_scale = 0
    elseif data.health_scale > 100 then data.health_scale = 100
    end

end

function tvRP.varyHeathScale(variation)
    local user_id = vRP.getUserId(source)
    if user_id then
        vRP.varyHealthScale(user_id,variation)
    end
end

function tvRP.varyPee(variation)
    local user_id = vRP.getUserId(source)
    if user_id then
        vRP.varyPee(user_id,variation)
    end
end

function tvRP.varySleep(variation)
    local user_id = vRP.getUserId(source)
    if user_id then
        vRP.varyThirst(user_id,variation)
    end
end



