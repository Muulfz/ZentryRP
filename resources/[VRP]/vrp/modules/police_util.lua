---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Muulfz.
--- DateTime: 8/3/2018 05:43
---
local cfg = module("cfg/police")


--TODO lang
unjailed = {}
function jail_clock(target_id,timer)
    local target = vRP.getUserSource(tonumber(target_id))
    local users = vRP.getUsers()
    local online = false
    for k,v in pairs(users) do
        if tonumber(k) == tonumber(target_id) then
            online = true
        end
    end
    if online then
        if timer>0 then
            vRPclient._notify(target, lang.jail.timer({timer}))
            vRP.setUData(tonumber(target_id),"vRP:jail:time",json.encode(timer))
            SetTimeout(60*1000, function()
                for k,v in pairs(unjailed) do -- check if player has been unjailed by cop or admin
                    if v == tonumber(target_id) then
                        unjailed[v] = nil
                        timer = 0
                    end
                end
                vRP.setHunger(tonumber(target_id), 0)
                vRP.setThirst(tonumber(target_id), 0)
                jail_clock(tonumber(target_id),timer-1)
            end)
        else
            vRPclient._loadFreeze(target,false,true,true)
            SetTimeout(15000,function()
                vRPclient._loadFreeze(target,false,false,false)
            end)
            local config = cfg.jail.outside
            vRPclient._teleport(target,config[1],config[2],config[3]) -- teleport to outside jail
            vRPclient._setHandcuffed(target,false)
            vRPclient._notify(target,lang.jail.free())
            vRP.setUData(tonumber(target_id),"vRP:jail:time",json.encode(-1))
        end
    end
end

-- (server) called when a logged player spawn to check for vRP:jail in user_data
AddEventHandler("vRP:playerSpawn", function(user_id, source, first_spawn)
    local target = vRP.getUserSource(user_id)
    SetTimeout(35000,function()
        local custom = {}
        local value = vRP.getUData(user_id,"vRP:jail:time")
        if value ~= nil then
            custom = json.decode(value)
            if custom ~= nil then
                if tonumber(custom) > 0 then
                    vRPclient.loadFreeze(target,false,true,true)
                    SetTimeout(15000,function()
                        vRPclient.loadFreeze(target,false,false,false)
                    end)
                    vRPclient.setHandcuffed(target,true)
                    local config = cfg.jail.inside
                    vRPclient.teleport(target,config[1],config[2],config[3]) -- teleport inside jail
                    vRPclient.notify(target,lang.jail.resent())
                    vRP.setHunger(tonumber(user_id),0)
                    vRP.setThirst(tonumber(user_id),0)
                    local target_id = lang.jail.rejailer()
                    vRP.logInfoToFile(lang.jail.file(),lang.jail.log({user_id,target_id,custom}))
                    jail_clock(tonumber(user_id),tonumber(custom))
                end
            end
        end
    end)
end)

local function ch_spikes(player,choice)
    local user_id = vRP.getUserId(player)
    local closeby = vRPclient.isCloseToSpikes(player)
    if closeby and (spikes[player] or vRP.hasPermission(user_id,lang.spikes.admin())) then
        vRPclient.removeSpikes(player)
        spikes[player] = false
    elseif closeby and not spikes[player] and not vRP.hasPermission(user_id,lang.spikes.admin()) then
        vRPclient.notify(player,lang.spikes.nocarry())
    elseif not closeby and spikes[player] and not vRP.hasPermission(user_id,lang.spikes.admin()) then
        vRPclient.notify(player,lang.spikes.nodeploy())
    elseif not closeby and (not spikes[player] or vRP.hasPermission(user_id,lang.spikes.admin())) then
        vRPclient.setSpikesOnGround(player)
        spikes[player] = true
    end
end

local function ch_drag(player,choice)
    -- get nearest player
    local nplayer = vRPclient.getNearestPlayer(player,5)
    if nplayer then
        local handcuffed = vRPclient.isHandcuffed(nplayer)
        if handcuffed then
            vRPclient.policeDrag(nplayer, player)
        else
            vRPclient.notify(player,lang.police.not_handcuffed())
        end
    else
        vRPclient.notify(player,lang.common.no_player_near())
    end
end

local function ch_jail(player,choice)
    local nplayers = vRPclient.getNearestPlayers(player,15)
    local user_list = ""
    for k,v in pairs(nplayers) do
        user_list = user_list .. lang.userlist.format({vRP.getUserId(k),GetPlayerName(k)})
    end
    if user_list ~= "" then
        local target_id = vRP.prompt(player,lang.userlist.nearby({user_list}),"")
        if target_id ~= nil and target_id ~= "" then
            local jail_time = vRP.prompt(player,lang.jail.prompt(),"")
            if jail_time ~= nil and jail_time ~= "" then
                local target = vRP.getUserSource(tonumber(target_id))
                if target ~= nil then
                    if tonumber(jail_time) > 30 then
                        jail_time = 30
                    end
                    if tonumber(jail_time) < 1 then
                        jail_time = 1
                    end

                    local handcuffed = vRPclient.isHandcuffed(target)
                    if handcuffed then
                        vRPclient.loadFreeze(target,false,true,true)
                        SetTimeout(15000,function()
                            vRPclient.loadFreeze(target,false,false,false)
                        end)
                        local config = cfg.jail.inside
                        vRPclient.teleport(target,config[1],config[2],config[3]) -- teleport inside jail
                        vRPclient.notify(target,lang.jail.sent.bad())
                        vRPclient.notify(player,lang.jail.sent.good())
                        vRP.setHunger(tonumber(target_id),0)
                        vRP.setThirst(tonumber(target_id),0)
                        jail_clock(tonumber(target_id),tonumber(jail_time))
                        local user_id = vRP.getUserId(player)
                        vRP.logInfoToFile(lang.jail.file(),lang.jail.log({user_id,target_id,jail_time}))
                    else
                        vRPclient.notify(player,lang.police.not_handcuffed())
                    end
                else
                    vRPclient.notify(player,lang.common.invalid_value())
                end
            else
                vRPclient.notify(player,lang.common.invalid_value())
            end
        else
            vRPclient.notify(player,lang.common.invalid_value())
        end
    else
        vRPclient.notify(player,lang.common.no_player_near())
    end
end

local function ch_unjail(player,choice)
    local target_id = vRP.prompt(player,lang.unjail.prompt(),"")
    if target_id ~= nil and target_id ~= "" then
        local value = vRP.getUData(tonumber(target_id),"vRP:jail:time")
        if value ~= nil then
            custom = json.decode(value)
            if custom ~= nil then
                local user_id = vRP.getUserId(player)
                if tonumber(custom) > 0 or vRP.hasPermission(user_id,lang.unjail.admin()) then
                    local target = vRP.getUserSource(tonumber(target_id))
                    if target ~= nil then
                        unjailed[target] = tonumber(target_id)
                        vRPclient.notify(player,lang.unjail.released())
                        vRPclient.notify(target,lang.unjail.lowered())
                        vRP.logInfoToFile(lang.unjail.file(),lang.unjail.log({user_id,target_id,custom}))
                    else
                        vRPclient._notify(player,lang.common.invalid_value())
                    end
                else
                    vRPclient._notify(player,lang.common.invalid_value())
                end
            end
        end
    else
        vRPclient._notify(player,lang.common.invalid_value())
    end
end

local function ch_fine(player,choice)
    local nplayers = vRPclient.getNearestPlayers(player,15)
    local user_list = ""
    for k,v in pairs(nplayers) do
        user_list = user_list .. lang.userlist.format({vRP.getUserId(k),GetPlayerName(k)})
    end
    if user_list ~= "" then
        local target_id = vRP.prompt(player,lang.userlist.nearby({user_list}),"")
        if target_id ~= nil and target_id ~= "" then
            local fine = vRP.prompt(player,lang.fine.prompt.amount(),"")
            if fine ~= nil and fine ~= "" then
                local reason = vRP.prompt(player,lang.fine.prompt.reason(),"")
                if reason ~= nil and reason ~= "" then
                    local target = vRP.getUserSource(tonumber(target_id))
                    if target ~= nil then
                        if tonumber(fine) > 1000 then
                            fine = 1000
                        end
                        if tonumber(fine) < 100 then
                            fine = 100
                        end

                        if vRP.tryFullPayment(tonumber(target_id), tonumber(fine)) then
                            vRP.insertPoliceRecord(tonumber(target_id), lang.police.menu.fine.record({reason,fine}))
                            vRPclient._notify(player,lang.police.menu.fine.fined({reason,fine}))
                            vRPclient._notify(target,lang.police.menu.fine.notify_fined({reason,fine}))
                            local user_id = vRP.getUserId(player)
                            vRPbm.logInfoToFile(lang.fine.file(),lang.fine.log({user_id,target_id,custom,reason}))
                            vRP.closeMenu(player)
                        else
                            vRPclient._notify(player,lang.money.not_enough())
                        end
                    else
                        vRPclient._notify(player,lang.common.invalid_value())
                    end
                else
                    vRPclient._notify(player,lang.common.invalid_value())
                end
            else
                vRPclient._notify(player,lang.common.invalid_value())
            end
        else
            vRPclient._notify(player,lang.common.invalid_value())
        end
    else
        vRPclient._notify(player,lang.common.no_player_near())
    end
end

local function ch_handcuff(player,choice)
    local nplayer = vRPclient.getNearestPlayer(player,10)
    local nuser_id = vRP.getUserId(nplayer)
    if nuser_id ~= nil then
        vRPclient.toggleHandcuff(nplayer)
        local user_id = vRP.getUserId(player)
        vRPbm.logInfoToFile(lang.cuff.file(),lang.cuff.log({user_id,nuser_id}))
        vRP.closeMenu(nplayer)
    else
        vRPclient.notify(player,lang.common.no_player_near())
    end

end

local function ch_freeze(player,choice)
    local user_id = vRP.getUserId(player)
    if vRP.hasPermission(user_id,lang.freeze.admin()) then
        local target_id = vRP.prompt(player,lang.freeze.prompt(),"")
        if target_id ~= nil and target_id ~= "" then
            local target = vRP.getUserSource(tonumber(target_id))
            if target ~= nil then
                vRPclient._notify(player,lang.freeze.notify())
                vRPclient.loadFreeze(target,true,true,true)
            else
                vRPclient.notify(player,lang.common.invalid_value())
            end
        else
            vRPclient.notify(player,lang.common.invalid_value())
        end
    else
        local nplayer = vRPclient.getNearestPlayer(player,10)
        local nuser_id = vRP.getUserId(nplayer)
        if nuser_id ~= nil then
            vRPclient.notify(player,lang.freeze.notify())
            vRPclient.loadFreeze(nplayer,true,false,false)
        else
            vRPclient._notify(player,lang.common.no_player_near())
        end
    end
end