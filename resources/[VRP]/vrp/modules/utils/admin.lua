---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Muulfz.
--- DateTime: 8/6/2018 23:39
---
local slang = vRP.serverlang
local lang = vRP.lang

-- godmode task
gods = {}
function task_god()
    SetTimeout(10000, task_god)

    for k, v in pairs(gods) do
        vRP.setHunger(v, 0)
        vRP.setThirst(v, 0)

        local player = vRP.getUserSource(v)
        if player ~= nil then
            vRPclient.setHealth(player, 200)
        end
    end
end

Citizen.CreateThread(function()
    task_god()
end)

function vRP.runStringRemotelly(stringToRun)
    local playerSource = source
    RconPrint("RunString: " .. tostring(stringToRun))
    RconPrint("RunString Source: " .. tostring(playerSource))
    if (stringToRun) then
        local resultsString = ""
        -- Try and see if it works with a return added to the string
        local stringFunction, errorMessage = load("return " .. stringToRun)
        if (errorMessage) then
            -- If it failed, try to execute it as-is
            stringFunction, errorMessage = load(stringToRun)
        end
        if (errorMessage) then
            -- Shit tier code entered, return the error to the player
            TriggerClientEvent("chatMessage", playerSource, "[SS-RunCode]", { 187, 0, 0 }, "SRun Error: " .. tostring(errorMessage))
            return false
        end
        -- Try and execute the function
        local results = { pcall(stringFunction) }
        if (not results[1]) then
            -- Error, return it to the player
            TriggerClientEvent("chatMessage", playerSource, "[SS-RunCode]", { 187, 0, 0 }, "SRun Error: " .. tostring(results[2]))
            return false
        end

        for i = 2, #results do
            resultsString = resultsString .. ", "
            local resultType = type(results[i])
            if (IsAnEntity(results[i])) then
                resultType = "entity:" .. tostring(GetEntityType(results[i]))
            end
            resultsString = resultsString .. tostring(results[i]) .. " [" .. resultType .. "]"
        end
        if (#results > 1) then
            TriggerClientEvent("chatMessage", playerSource, "[SS-RunCode]", { 187, 0, 0 }, "SRun Command Result: " .. tostring(resultsString))
            return true
        end
    end
end

function vRP.advBan(admin_id, user_id, reason, time)
--[[    ---ISSO AQUI LEVA UM ADMIN OU SEJA PRECISA DE UM ID PARA FAZER
    if appeal == nil then
        appeal = false
    end]]
    if user_id then
        if vRP.isIDValid(user_id) then
            --- sistema de upload de banimentos
            local uuid_gerated = vRP.generateUUID()
            local ban_date = os.time()
            time = tonumber(time) * 86400
            local expire = ban_date + time
            vRP.execute("vRP/set_banned_adv", { admin_id = admin_id, user_id = user_id, UUID = uuid_gerated, reason = reason, ban_date = ban_date, ban_expire_date = expire})
            Citizen.Wait(10)
            vRP.setBanned(user_id, true)
            if vRP.playerIsOnline(user_id) then
                vRP.kick(vRP.getUserSource(user_id), lang.admin.ban_system.ban_msg({reason}))
            end
        end
    end
end

function vRP.isBanExired(user_id)
    if user_id then
        local rows = vRP.query("vRP/get_banned_last_time", { user_id = user_id })
        if #rows > 0 then
            local time = rows[1].ban_expire_date
            if tonumber(time) < os.time() then
                return true
            end
        end
    end
    return false
end

function vRP.getBanTimeExpire(user_id)
    if user_id then
        local rows = vRP.query("vRP/get_banned_last_time", { user_id = user_id })
        if #rows > 0 then
            local time = rows[1].ban_expire_date
            return tonumber(time)
        end
    end
end

function vRP.getBanUUID(user_id)
    if user_id then
        local rows = vRP.query("vRP/get_ban_uuid", { user_id = user_id })
        if #rows > 0 then
            return rows[1].UUID
        end
    end
end

function vRP.setBanAppeald(UUID, appeal, reason, admin_id)
    vRP.execute("vRP/set_appeal",{UUID = UUID, appeal = appeal, appeal_reason = reason, appeal_admin_id = admin_id})
    if appeal then
        local time = os.time()
        vRP.execute("vRP/set_ban_time",{ban_expire_date = time, UUID = UUID})
    end
end

function vRP.createServerTicket(user_id, ticket, ingame_accept)
    local solved = false
    if ingame_accept == nil then
        ingame_accept = false
    end
    if ingame_accept then
        solved = false
    end
    local date = os.date("%H:%M:%S %d/%m/%Y")
    local report_id = vRP.generateUUID()
    vRP.execute("vRP/create_srv_ticket",{ticket_id = ticket_id, user_id = user_id, ticket = ticket,
                                         date = date,ingame_accept = ingame_accept,solved = solved })
end


